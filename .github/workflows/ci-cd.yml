name: CI/CD

on:
  push:
    # Publish latest or develop branch as prerelease.
    branches: [ master, develop ]
    # Publish semver tags as releases.
    tags: [ '*.*.*' ]
    # and only if one of these files changed.
    paths:
      - .github/workflows/ci.yml
      - .dockerignore
      - pwa.Dockerfile

      # Below should match .dockerignore
      - '.docker/rootfs/**'

      - 'pwa/.docker/rootfs/**'
      - 'pwa/public/**'
      - 'pwa/src/**'
      - pwa/.browserslistrc
      - pwa/index.html
      - pwa/package.json
      - pwa/pnpm-lock.yaml
      - pwa/postcss.config.js
      - pwa/tailwind.config.js
      - pwa/tsconfig.json
      - pwa/tsconfig.node.json
      - pwa/vite.config.ts
      - pwa/vitest-setup.js
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.2.2'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          # Username and password (or personal access token if using 2FA) for Docker Hub login
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata (PWA)
        id: meta-pwa
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.IMAGE_NAME }}

      - name: Start SSH agent for Docker build with '--mount=type=ssh'
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image (PWA)
        id: build-and-push-pwa
        uses: docker/build-push-action@v6
        with:
          file: ./pwa.Dockerfile
          target: prod
          platforms: linux/amd64 #,linux/arm64 # TODO: Reenable when needed
          ssh: |
            default
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-pwa.outputs.tags }}
          labels: ${{ steps.meta-pwa.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data. If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image (PWA)
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta-pwa.outputs.tags }}
          DIGEST: ${{ steps.build-and-push-pwa.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
